AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Feeds Service Stack


Mappings:

  LogMap:
    PapertrailLog:
      stage: "logs7.papertrailapp.com:23213"
      test: "logs7.papertrailapp.com:16637"
      prod: "logs7.papertrailapp.com:16747"

  FunctionName:
    GetNewFacesFunction:
      test: test-get-new-faces-feeds
      stage: stage-get-new-faces-feeds
      prod: prod-get-new-faces-feeds
    GetNewFacesFunctionTargetGroup:
      test: test-get-new-faces-feeds-tg
      stage: stage-get-new-faces-feeds-tg
      prod: prod-get-new-faces-feeds-tg

    LMMFunction:
      test: test-lmm-feeds
      stage: stage-lmm-feeds
      prod: prod-lmm-feeds
    LMMFunctionTargetGroup:
      test: test-lmm-feeds-tg
      stage: stage-lmm-feeds-tg
      prod: prod-lmm-feeds-tg

    LMHISFunction:
      test: test-lmhis-feeds
      stage: stage-lmhis-feeds
      prod: prod-lmhis-feeds
    LMHISFunctionTargetGroup:
      test: test-lmhis-feeds-tg
      stage: stage-lmhis-feeds-tg
      prod: prod-lmhis-feeds-tg

    ChatFunction:
      test: test-chat-feeds
      stage: stage-chat-feeds
      prod: prod-chat-feeds
    ChatFunctionTargetGroup:
      test: test-chat-feeds-tg
      stage: stage-chat-feeds-tg
      prod: prod-chat-feeds-tg

    DiscoverFunction:
      test: test-discover-feeds
      stage: stage-discover-feeds
      prod: prod-discover-feeds
    DiscoverFunctionTargetGroup:
      test: test-discover-feeds-tg
      stage: stage-discover-feeds-tg
      prod: prod-discover-feeds-tg

Parameters:
  Env:
    Type: String
    Default: stage
    AllowedValues:
      - test
      - stage
      - prod
    Description: Env name

  CloudWatchNewFaceProfilesReturnMetricName:
    Type: String
    Default: NewFaceProfilesReturn
  CloudWatchLikesYouProfilesReturnMetricName:
    Type: String
    Default: LikesYouProfilesReturn
  CloudWatchMatchProfilesReturnMetricName:
    Type: String
    Default: MatchProfilesReturn
  CloudWatchMessageProfilesReturnMetricName:
    Type: String
    Default: MessageProfilesReturn


Globals:
    Function:
        Timeout: 300
        MemorySize: 512
        Runtime: go1.x
        Environment:
          Variables:
            ENV: !Ref Env
            PAPERTRAIL_LOG_ADDRESS: !FindInMap [LogMap, PapertrailLog, !Ref Env]
            INTERNAL_AUTH_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, InternalGetUserIdFunctionExport] ]
            COMMON_STREAM:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, CommonEventStreamExportName] ]
            INTERNAL_GET_NEW_FACES_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, NewFacesFunctionExport] ]
            INTERNAL_LIKES_YOU_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, LikesYouFunctionExport] ]
            INTERNAL_MATCHES_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, MatchesFunctionExport] ]
            INTERNAL_MESSAGES_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, MessagesFunctionExport] ]
            INTERNAL_LMHIS_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, LMHISFunctionExport] ]
            INTERNAL_CHAT_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, ChatFunctionExport] ]
            INTERNAL_PREPARE_NF_FUNCTION_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, PrepareNewFacesFunctionExport] ]
            INTERNAL_STREAM_NAME:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, InternalEventStreamExportName] ]
            DELIVERY_STREAM:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, DeliveryStreamExportName] ]
            CLOUD_WATCH_MESSAGES_RETURN: !Ref CloudWatchMessageProfilesReturnMetricName
            CLOUD_WATCH_MATCHES_RETURN: !Ref CloudWatchMatchProfilesReturnMetricName
            CLOUD_WATCH_LIKES_YOU_RETURN: !Ref CloudWatchLikesYouProfilesReturnMetricName
            CLOUD_WATCH_NEW_FACES_RETURN: !Ref CloudWatchNewFaceProfilesReturnMetricName
            BASE_CLOUD_WATCH_NAMESPACE: !Join [ "-", [ !Ref Env, feeds, service] ]
        Tags:
          Company: Ringoid
          Service: feeds
          Environment: !Ref Env

Resources:

  GetNewFacesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !FindInMap [FunctionName, GetNewFacesFunction, !Ref Env]
      Handler: get_new_faces
      CodeUri: ./get_new_faces.zip
      Description: Get New Faces feeds function
      Policies:
        - AWSLambdaFullAccess
        - AmazonKinesisFirehoseFullAccess
        - CloudWatchFullAccess

  GetNewFacesTargetGroup:
    Type: Custom::CreateTargetGroup
    Properties:
      ServiceToken:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, CustomResourceFunctionExport] ]
      CustomName: !FindInMap [FunctionName, GetNewFacesFunctionTargetGroup, !Ref Env]
      CustomTargetsId: !GetAtt GetNewFacesFunction.Arn
      TargetLambdaFunctionName: !Ref GetNewFacesFunction

  GetNewFacesListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !GetAtt GetNewFacesTargetGroup.TargetGroupArn
      Conditions:
        - Field: path-pattern
          Values:
            - "/feeds/get_new_faces"
      ListenerArn:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, ListenerArnExport] ]
      Priority: 401

  LMMFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !FindInMap [FunctionName, LMMFunction, !Ref Env]
      Handler: lmm
      CodeUri: ./lmm.zip
      Description: LLM feeds function
      Policies:
        - AWSLambdaFullAccess
        - AmazonKinesisFirehoseFullAccess
        - CloudWatchFullAccess

  LMMTargetGroup:
    Type: Custom::CreateTargetGroup
    Properties:
      ServiceToken:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, CustomResourceFunctionExport] ]
      CustomName: !FindInMap [FunctionName, LMMFunctionTargetGroup, !Ref Env]
      CustomTargetsId: !GetAtt LMMFunction.Arn
      TargetLambdaFunctionName: !Ref LMMFunction

  LMMListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !GetAtt LMMTargetGroup.TargetGroupArn
      Conditions:
        - Field: path-pattern
          Values:
            - "/feeds/get_lmm"
      ListenerArn:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, ListenerArnExport] ]
      Priority: 402

  LMHISFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !FindInMap [FunctionName, LMHISFunction, !Ref Env]
      Handler: lmhis
      CodeUri: ./lmhis.zip
      Description: LMHIS feeds function
      Policies:
        - AWSLambdaFullAccess
        - AmazonKinesisFirehoseFullAccess
        - CloudWatchFullAccess

  LMHISTargetGroup:
    Type: Custom::CreateTargetGroup
    Properties:
      ServiceToken:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, CustomResourceFunctionExport] ]
      CustomName: !FindInMap [FunctionName, LMHISFunctionTargetGroup, !Ref Env]
      CustomTargetsId: !GetAtt LMHISFunction.Arn
      TargetLambdaFunctionName: !Ref LMHISFunction

  LMHISListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !GetAtt LMHISTargetGroup.TargetGroupArn
      Conditions:
        - Field: path-pattern
          Values:
            - "/feeds/get_lmhis"
      ListenerArn:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, ListenerArnExport] ]
      Priority: 403

  ChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !FindInMap [FunctionName, ChatFunction, !Ref Env]
      Handler: chat
      CodeUri: ./chat.zip
      Description: Chat feeds function
      Policies:
        - AWSLambdaFullAccess
        - AmazonKinesisFirehoseFullAccess
        - CloudWatchFullAccess

  ChatTargetGroup:
    Type: Custom::CreateTargetGroup
    Properties:
      ServiceToken:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, CustomResourceFunctionExport] ]
      CustomName: !FindInMap [FunctionName, ChatFunctionTargetGroup, !Ref Env]
      CustomTargetsId: !GetAtt ChatFunction.Arn
      TargetLambdaFunctionName: !Ref ChatFunction

  ChatListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !GetAtt ChatTargetGroup.TargetGroupArn
      Conditions:
        - Field: path-pattern
          Values:
            - "/feeds/chat"
      ListenerArn:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, ListenerArnExport] ]
      Priority: 404

  DiscoverFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !FindInMap [FunctionName, DiscoverFunction, !Ref Env]
      Handler: discover
      CodeUri: ./discover.zip
      Description: Discover feeds function
      Policies:
        - AWSLambdaFullAccess
        - AmazonKinesisFirehoseFullAccess
        - CloudWatchFullAccess

  DiscoverTargetGroup:
    Type: Custom::CreateTargetGroup
    Properties:
      ServiceToken:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, CustomResourceFunctionExport] ]
      CustomName: !FindInMap [FunctionName, DiscoverFunctionTargetGroup, !Ref Env]
      CustomTargetsId: !GetAtt DiscoverFunction.Arn
      TargetLambdaFunctionName: !Ref DiscoverFunction

  DiscoverListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !GetAtt DiscoverTargetGroup.TargetGroupArn
      Conditions:
        - Field: path-pattern
          Values:
            - "/feeds/discover"
      ListenerArn:
        Fn::ImportValue:
          !Join [ "-", [ !Ref Env, ListenerArnExport] ]
      Priority: 405
